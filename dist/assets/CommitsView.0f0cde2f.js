import{o as n,b as m,e as r,t as u,F as p,d as C,u as k,f as l,w as h,a as f,h as B,c as P,i as w,r as _}from"./index.f2a4e3ff.js";import{O,_ as D,B as E,P as N}from"./index.8d0c2292.js";const T={class:"border border-gray-300 p-1",colspan:"3"},V={class:"border border-gray-300 p-1 text-right",colspan:"1"},L={class:"border border-gray-300 p-1",colspan:"1"},S={__name:"Commit",props:{commit:Object},setup(t){return(e,s)=>(n(),m(p,null,[r("td",T,u(t.commit.commit.message),1),r("td",V,u(t.commit.commit.author.date),1),r("td",L,u(t.commit.commit.author.name),1)],64))}},R=C("commitStore",{state:()=>({commits:[],lastPage:null,currentPage:null}),getters:{all(){return this.commits.map(t=>{let s=new Date(t.commit.author.date).toLocaleDateString("pt-BR",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"});return{...t,commit:{...t.commit,author:{...t.commit.author,date:s},committer:{...t.commit.committer,date:s}}}})}},actions:{async list(t,e=1){const s=new O({auth:{VITE_GITHUB_USER:"brungran",VITE_GITHUB_AUTH_TOKEN:"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",BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0}.VITE_SOME_KEY});try{const i=await s.request("GET /repos/brungran/"+t+"/commits",{owner:"brungran",repo:t,per_page:10,page:e});if(i.headers.link){const a=i.headers.link.split(",").filter(o=>o.includes('rel="last"'))[0];a&&(this.lastPage=Number(a.substr(a.indexOf("&page=")+6,a.indexOf(">")-(a.indexOf("&page=")+6))))}else this.lastPage=null;this.currentPage=Number(e),i.status===200&&(this.commits=i.data)}catch(i){return this.commits=[],i}}}}),c=R(),v={data(){return{commits:[]}},setup(){return{route:k()}},async created(){await c.list(this.route.params.name),this.commits=c.all},components:{Commit:S,Button:E,Pagination:N},computed:{alphabetical(){let t=this.commits;return t=t.sort((e,s)=>e.commit.message.toLowerCase()<s.commit.message.toLowerCase()?-1:e.commit.message.toLowerCase()>s.commit.message.toLowerCase()?1:0),t},orderByDate(){let t=this.commits;return t=t.sort((e,s)=>e.commit.author.date>s.commit.author.date?-1:e.commit.author.date<s.commit.author.date?1:0),t},lastPage(){return c.lastPage},currentPage(){return c.currentPage},currentUser(){return"brungran"}},methods:{async fetchAnotherPage(t){this.currentPage!==t&&(await c.list(this.route.params.name,t),this.commits=c.all)}}},U={class:"flex justify-items-start space-x-4 flex-start mt-5"},A={class:"text-xl mt-4"},I={key:0},G={class:"mt-4 w-full table-fixed"},j=r("th",{class:"text-left",colspan:"3"},"Message",-1),F=r("th",{class:"text-right pr-1",colspan:"1"},"Date and Time",-1),H=r("th",{class:"text-left pl-1",colspan:"1"},"Author",-1),M={class:"flex justify-end space-x-2 mt-4 text-sm mr-2"},q={key:1,class:"mt-2"};function K(t,e,s,i,a,o){const b=_("RouterLink"),g=_("Button"),x=_("Commit"),y=_("Pagination");return n(),m(p,null,[l(g,null,{default:h(()=>[l(b,{to:"/"},{default:h(()=>[f("Go back")]),_:1})]),_:1}),r("div",U,[l(g,{onClick:e[0]||(e[0]=d=>a.commits=o.alphabetical)},{default:h(()=>[f("Order Alphabetically")]),_:1}),l(g,{onClick:e[1]||(e[1]=d=>a.commits=o.orderByDate)},{default:h(()=>[f("Order by Date")]),_:1})]),r("h2",A,"Current total of results: "+u(this.commits.length),1),this.commits.length>0?(n(),m("div",I,[r("table",G,[j,F,H,(n(!0),m(p,null,B(a.commits,d=>(n(),m("tr",{key:d.id,class:"hover:bg-gray-200"},[l(x,{commit:d},null,8,["commit"])]))),128))]),r("div",M,[o.lastPage!==null?(n(),P(y,{key:0,currentPage:o.currentPage,lastPage:o.lastPage,onPageClick:o.fetchAnotherPage},null,8,["currentPage","lastPage","onPageClick"])):w("",!0)])])):(n(),m("h3",q," No commits from "+u(o.currentUser)+" found on this repository.",1))],64)}const Y=D(v,[["render",K]]),$={__name:"CommitsView",setup(t){return(e,s)=>(n(),P(Y))}};export{$ as default};
